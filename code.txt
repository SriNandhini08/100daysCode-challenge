\\positive or negative


#include <stdio.h>

int main() {
    int a;
    printf("enter a number to find positive or negative:");
    scanf("%d",&a);
    if (a>0){
        printf("the number is positive");
    }
    else if(a<0){
        printf("the number is negative");
    }
    else{
        printf("the number is zero");
        
    }
    return 0;
}

\\odd or even

#include <stdio.h>

int main() {
    int a;
    printf("enter a number to check if odd or even");
    scanf("%d",&a);
    if (a%2==0){
    printf("the number is even");
    }
    else{
        printf("the number is odd");
    }
}

\\sum of first n numbers

#include <stdio.h>

int main() {
    int num,sum,i;
    printf("enter a number:");
    scanf("%d",&num);
    sum=0;
    for(i=0;i<=num;i++){
        sum+=i;
    }
    printf("the sum is:%d",sum);
    return 0;
}

\\sum of n numbers

#include <stdio.h>

int main(){
    int start,end,i,sum=0;
    printf("enter start and end range:");
    scanf("%d %d",&start,&end);
    for(i=start;i<=end;i++)
    {
        sum+=i;
    }
    printf("the sum is %d",sum);
}

//greatest of two number

#include <stdio.h>

int main(){
    int num1,num2;
    printf("enter two numbers:");
    scanf("%d %d",&num1,&num2);
    if(num1>num2){
        printf("num1 is greater");
    }
    else
    printf("num2 is greater");
}

\\greatest of three numbers

#include <stdio.h>

int main() {
    // Write C code here
    int num1,num2,num3;
    printf("enter num1,num2,num3:");
    scanf("%d %d %d",&num1,&num2,&num3);
    if (num1>=num2 &&num1>=num3)
    printf("num1 is greater");
    else if (num2>=num1 && num2>=num3)
    printf("num 2 is greater");
    else
    printf("num3 is greater");
    

    return 0;
}

\\leap year or not

#include <stdio.h>

int main() {
    // Write C code here
    int year;
    printf("enter a year:");
    scanf("%d",&year);
    if(year%4==0)
    printf("the year is leap year");
    else
    printf("the year is not a leap year");
    return 0;
}

\\prime number

n=int(input("enter a number:"))
count=0
for i in range (2,n):
    if(n%i==0):
        count+=1
        break
        
if count==1:
    print("the number is not a prime number")
else:
    print("the number is  a prime number")

\\prime within a range

#include <stdio.h>
#include <stdbool.h>

bool isprime(int n) {
    if (n < 2) return false; // 0 and 1 are not prime
    for (int i = 2; i < n; i++) {
        if (n % i == 0)
            return false;
    }
    return true;
}

int main() {
    int start, end, i;
    printf("Start: ");
    scanf("%d", &start);
    printf("End: ");
    scanf("%d", &end);

    for (i = start; i <= end; i++) {
        if (isprime(i))
            printf("%d ", i);
    }

    return 0;
}

\\sum of digits of a number

#include <stdio.h>

int main() {
    // Write C code her
    int num,sum=0;
    printf("enter a number:");
    scanf("%d",&num);
    while(num!=0){
        sum+=num%10;
        num=num/10;
    }
    printf("%d",sum);

    return 0;
}

\\reverse of a number

#include <stdio.h>

int main() {
    // Write C code here
    int num,rev;
    printf("enter a number:");
    scanf("%d",&num);
    while(num!=0){
        rev=num%10;
        printf("%d",rev);
        num=num/10;
        
    }

    return 0;
}

\\palindrome

#include <stdio.h>

int main() {
    // Write C code here
    int num,rev=0,temp,rem;
    printf("enter a number:");
    scanf("%d",&num);
    temp=num;
    while(num!=0){
        rem=num%10;
        rev=rev*10+rem;
        num=num/10;
        
    }
    if(rev==temp)
    printf("the num is palindrome");
    else
    printf("the num is not a palindrome");

    return 0;
}

\\armstrong

n=int(input("enter a num"))
og=n
len=len(str(n))
sum=0
temp=n
while temp>0:
    dig=temp%10
    sum+=dig**len
    temp//=10


if sum==og:
    print("amstrong")
else:
    print("not amstrong")

\\armstrong in given range

#include <stdio.h>
#include<math.h>
int amstrong(int num,int len){
    int digit,sum=0,og=num;
    while(num>0){
        
        digit=num%10;
        sum+=pow(digit,len);
        num/=10;
    }
    return sum==og;
}

int main() {
    // Write C code here
   int num,sum,len=0,temp;
   printf("enter the number");
   scanf("%d",&num);
   temp=num;
   while(temp>0){
       len++;
       temp=temp/10;
  
   }  
       
       if(amstrong(num,len)){
          printf("amstrong"); 
       }
       
       else
       {
       printf("not a  amstrong");
       }

    return 0;
}

\\fibonacci upto n num

#include <stdio.h>

int main() {
    int a=0,b=1,n,i,c;
    printf("enter a number:");
    scanf("%d",&n);
    printf("%d %d",a,b);
    for(i=2;i<n;i++){
        c=a+b;
        printf(" %d",c);
        a=b;
        b=c;
    }
    return 0;
}

\\nth term of fibonacci

#include <stdio.h>

int main() {
    int a=0,b=1,n,i,c;
    printf("enter a number:");
    scanf("%d",&n);
    if(n==1)
    printf("fibonacci term:%d",a);
    else if(n==2)
    printf("fibonacci term:%d",b);
    else{
        for(i=3;i<=n;i++){
            c=a+b;
            a=b;
            b=c;
        }
        printf("fibonacci term:%d",c);
    }
    return 0;
}

// power of a number

#include <stdio.h>
#include <math.h>

int main() {
    // Write C code here
   int n,p;
   printf("enter the base and power");
   scanf("%d %d",&n,&p);
   printf("%.2f",pow(n,p));

    return 0;
}

//factorial of a number

#include <stdio.h>
#include <math.h>
int fact(int n){
    
    if(n==1||n==0){
        return 1;
    }
    else{
        return n*fact(n-1);
}
}
int main() {
    // Write C code here
    int x;
    printf("enter a number:");
    scanf("%d",&x);
    printf("%d",fact(x));
return 0;
   
}

//finding prime factors

#include <stdio.h>
#include<stdbool.h>
int prime(int n){
    int count=0;
    for(int i=2;i<n;i++){
        if(n%i==0)
        count+=1;
        break;
    }
    if (count==0)
    return true;
    else
    return false;
}




int main() {
    // Write C code here
    int n,i;
    printf("enter a number:");
    scanf("%d",&n);
    for(i=1;i<=n;i++){
        if(n%i==0 && prime(i)){
            printf("%d ",i);
        }
    }
    return 0;
}

//factors of a number

#include <stdio.h>

int main() {
    // Write C code here
    int n,i;
    printf("enter a number:");
    scanf("%d",&n);
    for(i=1;i<=n;i++){
        if(n%i==0){
            printf("%d ",i);
        }
    }
    return 0;
}

//strong number

#include <stdio.h>

int fact(int n){


     int factorial=1;
     for(int i=1;i<=n;i++){
         factorial*=i;
         
     }return factorial;
}
int isStrong(int n){
    int digit,sum=0,temp=n;
    while(n!=0){
    digit=n%10;
    sum+=fact(digit);
    n=n/10;
    }
    return sum==temp;
}

int main() {
    int x,sum=0,len=0;
    printf("enter a num:");
    scanf("%d",&x);
    if (isStrong(x)){
    printf("it is a strong num");
    }
    else{
        printf("not a strong num");
    }
    

    return 0;
}

//perfect number

#include <stdio.h>

int main(){
    int x,sum=0;
    printf("enter a number:");
    scanf("%d",&x);
    for(int i=1;i<x;i++){
    if(x%i==0){
        sum+=i;
    }
    }
    if(sum==x)
    printf("perfect num");
    else
    printf("not perfect");


    return 0;
}

\\perfect square

#include <stdio.h>
#include<math.h>
int main() {
    // Write C code here
   int n,sqr;
   printf("enter a number:");
   scanf("%d",&n);
   sqr=sqrt(n);
   if(sqr*sqr==n){
      printf("perfect square");
   }
   else
   printf("not a perfect square");
    return 0;
}

//automorphic number

#include <stdio.h>
#include<math.h>
int main() {
    // Write C code here
   int n,sqr,lastnum,lastsqr;
   printf("enter a number:");
   scanf("%d",&n);
   sqr=n*n;
   lastsqr=sqr%10;
   lastnum=n%10;
   if(lastsqr==lastnum){
     printf("automorphic");
   }
   else{
       printf("not automorphic");
   }
   return 0;
}

//harshad number

#include <stdio.h>

int main() {
    int n, sum=0, temp,digit;
    printf("enter a number:");
    scanf("%d",&n);
    temp=n;
    while(n!=0){
        digit=n%10;
        sum+=digit;
        n=n/10;
    }
    if(temp%sum==0){
        printf("harshad number");
    }
    else{
        printf("not a harshad number");
    }

    return 0;
}

//abundant number

#include <stdio.h>

int main() {
    int n, sum=0, temp,digit;
    printf("enter a number:");
    scanf("%d",&n);
    temp=n;
    for(int i=1;i<n;i++){
        if(n%i==0){
            sum+=i;
        }
    }    
    if(sum>temp){
        printf("abundant number");
    }
    else
    printf("not an abuntant number");

    return 0;
}

//friendly pair 

#include <stdio.h>

int main() {
    // Write C code here
    int n1,n2,sum1=0,sum2=0,i;
    printf("enter a num1 and num2:");
    scanf("%d %d",&n1,&n2);
    for(i=1;i<n1+1;i++){
        if(n1%i==0){
            sum1+=i;
        }
    }
    for(i=1;i<n2+1;i++){
        if(n2%i==0){
            sum2+=i;
        }
    }
    if(sum1/n1==sum2/n2){
        printf("friendly pair");
    }
    else
    printf("not a friendly pair");
    return 0;
}

//HCF

#include <stdio.h>

int main() {
    // Write C code here
    int n1,n2,i,small,hcf;
   printf("enter num1 and num2:");
   scanf("%d %d",&n1,&n2);
   if(n1<n2)
   small=n1;
   else
   small=n2;
   for(i=1;i<small+1;i++){
       if(n1%i==0 & n2%i==0){
           hcf=i;
       }
   }
   printf("%d",hcf);
    return 0;
}

\\LCM

#include <stdio.h>
#include<stdbool.h>

int main() {
    // Write C code here
   int n1,n2,max,lcm;
   printf("enter num1 and num2:");
   scanf("%d %d",&n1,&n2);
   if (n1>n2)
   max=n1;
   else
   max=n2;
   while (true){
       if (max%n1==0 && max%n2==0){
           lcm=max;
           break;
                  }
    max+=1;
    
   }
   printf("%d",lcm);

    return 0;
}

//GCD

#include <stdio.h>

int main() {
    // Write C code here
    int n1,n2,large,gcd,i;
    printf("enter num1 and num2:");
    scanf("%d %d",&n1,&n2);
    if(n1>n2)
    large=n1;
    else
    large=n2;
    for(i=large;i>1;i--){
        if(n1%i==0 & n2%i==0){
        gcd=i;
        break;
        }
        }
    printf("%d",gcd);
    return 0;
}

//Octal to decimal 

#include <stdio.h>
#include <string.h>
#include <math.h>

int main() {    
    int i,len,dec=0;
    char n[5];
    printf("enter a number:");
    scanf("%s",&n);
    len=strlen(n);
    for(i=0;i<len;i++){
        dec+=(n[i] - '0')*pow(8,len-i-1);
    }
    printf("%d",dec);

    return 0;
}

//hexa to dec

#include <stdio.h>
#include <string.h>
#include <math.h>

int main() {
    char hex[20];
    int decimal = 0, i, value, length;

    printf("Enter a hexadecimal number: ");
    scanf("%s", hex);

    length = strlen(hex);

    for (i = 0; i < length; i++) {
        if (hex[i] >= '0' && hex[i] <= '9') {
            value = hex[i] - '0';
        } else if (hex[i] >= 'A' && hex[i] <= 'F') {
            value = hex[i] - 'A' + 10;
        } else if (hex[i] >= 'a' && hex[i] <= 'f') {
            value = hex[i] - 'a' + 10;
        }
        decimal += value * pow(16, length - i - 1);
    }

    printf("Decimal equivalent: %d\n", decimal);
    return 0;
}

