\\positive or negative


#include <stdio.h>

int main() {
    int a;
    printf("enter a number to find positive or negative:");
    scanf("%d",&a);
    if (a>0){
        printf("the number is positive");
    }
    else if(a<0){
        printf("the number is negative");
    }
    else{
        printf("the number is zero");
        
    }
    return 0;
}

\\odd or even

#include <stdio.h>

int main() {
    int a;
    printf("enter a number to check if odd or even");
    scanf("%d",&a);
    if (a%2==0){
    printf("the number is even");
    }
    else{
        printf("the number is odd");
    }
}

\\sum of first n numbers

#include <stdio.h>

int main() {
    int num,sum,i;
    printf("enter a number:");
    scanf("%d",&num);
    sum=0;
    for(i=0;i<=num;i++){
        sum+=i;
    }
    printf("the sum is:%d",sum);
    return 0;
}

\\sum of n numbers

#include <stdio.h>

int main(){
    int start,end,i,sum=0;
    printf("enter start and end range:");
    scanf("%d %d",&start,&end);
    for(i=start;i<=end;i++)
    {
        sum+=i;
    }
    printf("the sum is %d",sum);
}

//greatest of two number

#include <stdio.h>

int main(){
    int num1,num2;
    printf("enter two numbers:");
    scanf("%d %d",&num1,&num2);
    if(num1>num2){
        printf("num1 is greater");
    }
    else
    printf("num2 is greater");
}

\\greatest of three numbers

#include <stdio.h>

int main() {
    // Write C code here
    int num1,num2,num3;
    printf("enter num1,num2,num3:");
    scanf("%d %d %d",&num1,&num2,&num3);
    if (num1>=num2 &&num1>=num3)
    printf("num1 is greater");
    else if (num2>=num1 && num2>=num3)
    printf("num 2 is greater");
    else
    printf("num3 is greater");
    

    return 0;
}

\\leap year or not

#include <stdio.h>

int main() {
    // Write C code here
    int year;
    printf("enter a year:");
    scanf("%d",&year);
    if(year%4==0)
    printf("the year is leap year");
    else
    printf("the year is not a leap year");
    return 0;
}

\\prime number

n=int(input("enter a number:"))
count=0
for i in range (2,n):
    if(n%i==0):
        count+=1
        break
        
if count==1:
    print("the number is not a prime number")
else:
    print("the number is  a prime number")

\\prime within a range

#include <stdio.h>
#include <stdbool.h>

bool isprime(int n) {
    if (n < 2) return false; // 0 and 1 are not prime
    for (int i = 2; i < n; i++) {
        if (n % i == 0)
            return false;
    }
    return true;
}

int main() {
    int start, end, i;
    printf("Start: ");
    scanf("%d", &start);
    printf("End: ");
    scanf("%d", &end);

    for (i = start; i <= end; i++) {
        if (isprime(i))
            printf("%d ", i);
    }

    return 0;
}

\\sum of digits of a number

#include <stdio.h>

int main() {
    // Write C code her
    int num,sum=0;
    printf("enter a number:");
    scanf("%d",&num);
    while(num!=0){
        sum+=num%10;
        num=num/10;
    }
    printf("%d",sum);

    return 0;
}

\\reverse of a number

#include <stdio.h>

int main() {
    // Write C code here
    int num,rev;
    printf("enter a number:");
    scanf("%d",&num);
    while(num!=0){
        rev=num%10;
        printf("%d",rev);
        num=num/10;
        
    }

    return 0;
}

\\palindrome

#include <stdio.h>

int main() {
    // Write C code here
    int num,rev=0,temp,rem;
    printf("enter a number:");
    scanf("%d",&num);
    temp=num;
    while(num!=0){
        rem=num%10;
        rev=rev*10+rem;
        num=num/10;
        
    }
    if(rev==temp)
    printf("the num is palindrome");
    else
    printf("the num is not a palindrome");

    return 0;
}

\\armstrong

n=int(input("enter a num"))
og=n
len=len(str(n))
sum=0
temp=n
while temp>0:
    dig=temp%10
    sum+=dig**len
    temp//=10


if sum==og:
    print("amstrong")
else:
    print("not amstrong")

\\armstrong in given range

#include <stdio.h>
#include<math.h>
int amstrong(int num,int len){
    int digit,sum=0,og=num;
    while(num>0){
        
        digit=num%10;
        sum+=pow(digit,len);
        num/=10;
    }
    return sum==og;
}

int main() {
    // Write C code here
   int num,sum,len=0,temp;
   printf("enter the number");
   scanf("%d",&num);
   temp=num;
   while(temp>0){
       len++;
       temp=temp/10;
  
   }  
       
       if(amstrong(num,len)){
          printf("amstrong"); 
       }
       
       else
       {
       printf("not a  amstrong");
       }

    return 0;
}

\\fibonacci upto n num

#include <stdio.h>

int main() {
    int a=0,b=1,n,i,c;
    printf("enter a number:");
    scanf("%d",&n);
    printf("%d %d",a,b);
    for(i=2;i<n;i++){
        c=a+b;
        printf(" %d",c);
        a=b;
        b=c;
    }
    return 0;
}

\\nth term of fibonacci

#include <stdio.h>

int main() {
    int a=0,b=1,n,i,c;
    printf("enter a number:");
    scanf("%d",&n);
    if(n==1)
    printf("fibonacci term:%d",a);
    else if(n==2)
    printf("fibonacci term:%d",b);
    else{
        for(i=3;i<=n;i++){
            c=a+b;
            a=b;
            b=c;
        }
        printf("fibonacci term:%d",c);
    }
    return 0;
}

// power of a number

#include <stdio.h>
#include <math.h>

int main() {
    // Write C code here
   int n,p;
   printf("enter the base and power");
   scanf("%d %d",&n,&p);
   printf("%.2f",pow(n,p));

    return 0;
}

//factorial of a number

#include <stdio.h>
#include <math.h>
int fact(int n){
    
    if(n==1||n==0){
        return 1;
    }
    else{
        return n*fact(n-1);
}
}
int main() {
    // Write C code here
    int x;
    printf("enter a number:");
    scanf("%d",&x);
    printf("%d",fact(x));
return 0;
   
}

//finding prime factors

#include <stdio.h>
#include<stdbool.h>
int prime(int n){
    int count=0;
    for(int i=2;i<n;i++){
        if(n%i==0)
        count+=1;
        break;
    }
    if (count==0)
    return true;
    else
    return false;
}




int main() {
    // Write C code here
    int n,i;
    printf("enter a number:");
    scanf("%d",&n);
    for(i=1;i<=n;i++){
        if(n%i==0 && prime(i)){
            printf("%d ",i);
        }
    }
    return 0;
}

//factors of a number

#include <stdio.h>

int main() {
    // Write C code here
    int n,i;
    printf("enter a number:");
    scanf("%d",&n);
    for(i=1;i<=n;i++){
        if(n%i==0){
            printf("%d ",i);
        }
    }
    return 0;
}

//strong number

#include <stdio.h>

int fact(int n){


     int factorial=1;
     for(int i=1;i<=n;i++){
         factorial*=i;
         
     }return factorial;
}
int isStrong(int n){
    int digit,sum=0,temp=n;
    while(n!=0){
    digit=n%10;
    sum+=fact(digit);
    n=n/10;
    }
    return sum==temp;
}

int main() {
    int x,sum=0,len=0;
    printf("enter a num:");
    scanf("%d",&x);
    if (isStrong(x)){
    printf("it is a strong num");
    }
    else{
        printf("not a strong num");
    }
    

    return 0;
}

//perfect number

#include <stdio.h>

int main(){
    int x,sum=0;
    printf("enter a number:");
    scanf("%d",&x);
    for(int i=1;i<x;i++){
    if(x%i==0){
        sum+=i;
    }
    }
    if(sum==x)
    printf("perfect num");
    else
    printf("not perfect");


    return 0;
}

\\perfect square

#include <stdio.h>
#include<math.h>
int main() {
    // Write C code here
   int n,sqr;
   printf("enter a number:");
   scanf("%d",&n);
   sqr=sqrt(n);
   if(sqr*sqr==n){
      printf("perfect square");
   }
   else
   printf("not a perfect square");
    return 0;
}

//automorphic number

#include <stdio.h>
#include<math.h>
int main() {
    // Write C code here
   int n,sqr,lastnum,lastsqr;
   printf("enter a number:");
   scanf("%d",&n);
   sqr=n*n;
   lastsqr=sqr%10;
   lastnum=n%10;
   if(lastsqr==lastnum){
     printf("automorphic");
   }
   else{
       printf("not automorphic");
   }
   return 0;
}

//harshad number

#include <stdio.h>

int main() {
    int n, sum=0, temp,digit;
    printf("enter a number:");
    scanf("%d",&n);
    temp=n;
    while(n!=0){
        digit=n%10;
        sum+=digit;
        n=n/10;
    }
    if(temp%sum==0){
        printf("harshad number");
    }
    else{
        printf("not a harshad number");
    }

    return 0;
}

//abundant number

#include <stdio.h>

int main() {
    int n, sum=0, temp,digit;
    printf("enter a number:");
    scanf("%d",&n);
    temp=n;
    for(int i=1;i<n;i++){
        if(n%i==0){
            sum+=i;
        }
    }    
    if(sum>temp){
        printf("abundant number");
    }
    else
    printf("not an abuntant number");

    return 0;
}

//friendly pair 

#include <stdio.h>

int main() {
    // Write C code here
    int n1,n2,sum1=0,sum2=0,i;
    printf("enter a num1 and num2:");
    scanf("%d %d",&n1,&n2);
    for(i=1;i<n1+1;i++){
        if(n1%i==0){
            sum1+=i;
        }
    }
    for(i=1;i<n2+1;i++){
        if(n2%i==0){
            sum2+=i;
        }
    }
    if(sum1/n1==sum2/n2){
        printf("friendly pair");
    }
    else
    printf("not a friendly pair");
    return 0;
}

//HCF

#include <stdio.h>

int main() {
    // Write C code here
    int n1,n2,i,small,hcf;
   printf("enter num1 and num2:");
   scanf("%d %d",&n1,&n2);
   if(n1<n2)
   small=n1;
   else
   small=n2;
   for(i=1;i<small+1;i++){
       if(n1%i==0 & n2%i==0){
           hcf=i;
       }
   }
   printf("%d",hcf);
    return 0;
}

\\LCM

#include <stdio.h>
#include<stdbool.h>

int main() {
    // Write C code here
   int n1,n2,max,lcm;
   printf("enter num1 and num2:");
   scanf("%d %d",&n1,&n2);
   if (n1>n2)
   max=n1;
   else
   max=n2;
   while (true){
       if (max%n1==0 && max%n2==0){
           lcm=max;
           break;
                  }
    max+=1;
    
   }
   printf("%d",lcm);

    return 0;
}

//GCD

#include <stdio.h>

int main() {
    // Write C code here
    int n1,n2,large,gcd,i;
    printf("enter num1 and num2:");
    scanf("%d %d",&n1,&n2);
    if(n1>n2)
    large=n1;
    else
    large=n2;
    for(i=large;i>1;i--){
        if(n1%i==0 & n2%i==0){
        gcd=i;
        break;
        }
        }
    printf("%d",gcd);
    return 0;
}

//Octal to decimal 

#include <stdio.h>
#include <string.h>
#include <math.h>

int main() {    
    int i,len,dec=0;
    char n[5];
    printf("enter a number:");
    scanf("%s",&n);
    len=strlen(n);
    for(i=0;i<len;i++){
        dec+=(n[i] - '0')*pow(8,len-i-1);
    }
    printf("%d",dec);

    return 0;
}

//hexa to dec

#include <stdio.h>
#include <string.h>
#include <math.h>

int main() {
    char hex[20];
    int decimal = 0, i, value, length;

    printf("Enter a hexadecimal number: ");
    scanf("%s", hex);

    length = strlen(hex);

    for (i = 0; i < length; i++) {
        if (hex[i] >= '0' && hex[i] <= '9') {
            value = hex[i] - '0';
        } else if (hex[i] >= 'A' && hex[i] <= 'F') {
            value = hex[i] - 'A' + 10;
        } else if (hex[i] >= 'a' && hex[i] <= 'f') {
            value = hex[i] - 'a' + 10;
        }
        decimal += value * pow(16, length - i - 1);
    }

    printf("Decimal equivalent: %d\n", decimal);
    return 0;
}

\\decimal to binary

#include <stdio.h>

int main() {
    // Write C code here
   int n,bin[32],i=0,j;
   printf("Enter a number:");
   scanf("%d",&n);
   while(n>0){
       bin[i]=n%2;
       n=n/2;
       i++;
   }
   for(j=i-1;j>=0;j--){
       printf("%d",bin[j]);
   }

    return 0;
}

//decimal to Octal

#include <stdio.h>

int main() {
    // Write C code here
    int num,i=0,j,oct[10],rem;
    printf("enter a number :");
    scanf("%d",&num);
    while(num>0){
        rem=num%8;
        oct[i]=rem;
        num=num/8;
        i++;
    }
    for(j=i-1;j>=0;j--){
        printf("%d",oct[j]);
    }

    return 0;
}

//dec to hexadecimal

#include <stdio.h>

int main() {
    // Write C code here
    int dec,remain;
    char hexa[20];
    int i=0;
    printf("enter a number:");
    scanf("%d",&dec);
    while(dec>0){
        remain=dec%16;
        if(remain<10){
        hexa[i]=48+remain;}
        else{
        hexa[i]=55+remain;}
        i++;
        dec=dec/16;
        
    }
    for(int j=i-1;j>=0;j--){
        printf("%c",hexa[j]);
    }
    return 0;
}

//binary to Octal

#include <stdio.h>
#include<string.h>
#include<math.h>


int main() {
    // Write C code here
  int dec=0,len,power=0,rem,base=1,oct=0;
  char bin[32];
  printf("enter a number:");
  scanf("%s",&bin);
  len=strlen(bin);
  for(int i =len-1;i>=0;i--){
      if(bin[i]=='1'){
          dec+=pow(2,power);
          }
          power++;
  }
  while(dec>0){
      rem=dec%8;
      oct+=rem*base;
      dec=dec/8;
      base*=10;
      
  }
  printf("%d",oct);

    return 0;
}

\\octal to binary

// Online C compiler to run C program online
#include <stdio.h>
#include<math.h>
#include<string.h>
int main() {
    // Write C code here
    int oct,dec=0,bin[10],power=0,base,rem,i=0;
    printf("enter a number:");
    scanf("%d",&oct);
    int temp;
    temp=oct;
    while(temp>0){
    rem=temp%10;
    dec+=rem*pow(8,power);
    power++;
    temp=temp/10;
    }
    while(dec>0){
        base=dec%2;
        bin[i]=base;
        dec=dec/2;
        i++;
    }
    for(int j=i-1;j>=0;j--){
        printf("%d",bin[j]);
    }

    return 0;
}

\\Quadrants in which coordinates lie

#include <stdio.h>

int main() {
    int x,y;
    printf("enter the co-ordinates:");
    scanf("%d %d",&x,&y);
    if(x>0 && y>0 )
    printf("The Co-ordinates lie in 1st quadrant");
    else if(x<0 && y>0)
    printf("The Co-ordinates lie in 2nd quadrant");
    else if(x<0 && y<0)
    printf("The Co-ordinates lie in 3rd quadrant");
    else if(x>0 && y<0)
    printf("The Co-ordinates lie in 4th quadrant");
    else if(x==0)
    printf("The Co-ordinates lie in  Y axis");
    else if(y==0)
    printf("The Co-ordinates lie in X axis");
    else
    printf("The Co-ordinates lie in the origin");
    return 0;
}

//permutation of people and rows

#include <stdio.h>
int fact(int n){
    int factorial;
    if(n==1 || n==0)
    return 1;
    else{
        factorial=n*fact(n-1);
    }
    
    
}
int main() {
    // Write C code here
    int r,p,permutation;
    printf("enter the no of people and no of rows:");
    scanf("%d %d",&p,&r);
    permutation=fact(p)/fact(p-r);
    printf("%d number of people can occupy in %d no of rows",p,permutation);
    return 0;
}

\\maximum handshakes

#include <stdio.h>

int main() {
    // Write C code here
    int n,max;
    printf("enter the number of people:");
    scanf("%d",&n);
    max=(n*(n-1))/2;
    printf("the maximum number of handshake %d",max);

    return 0;
}

\\adding two denominators

#include <stdio.h>

int main() {
    // Write C code here
    int n1,n2,d1,d2,c,numer,deno;
    printf("enter the numerator and demonitor of num1:");
    scanf("%d %d",&n1,&d1);
    printf("enter the numerator and demonitor of num2:");
    scanf("%d %d",&n2,&d2);
    numer=((n1*d2)+(n2*d1));
    deno=(d1*d2);
    for(int g=1;g<=numer && g<=deno;++g){
        if(numer%g==0 && deno%g==0)
        c=g;
    }
    
    printf("%d / %d + %d / %d = %d / %d",n1,d1,n2,d2,numer/c,deno/c);
    
    return 0;
}

\\replacing 0 with 1

#include <stdio.h>

int main() {
    // Write C code here
    long long num,digit,place=1,result=0;
    printf("enter a number:");
    scanf("%lld",&num);
    int temp;
    temp=num;
    while(temp>0){
        digit=temp%10;
        if(digit==0){
            digit=1;
        }
        result=result+digit*place;
        place*=10;
        temp/=10;
        }
    printf("%lld",result);
    

    return 0;
}

\\area of circle

#include <stdio.h>

int main() {
    // Write C code here
    long long num,digit,place=1,result=0;
    printf("enter a number:");
    scanf("%lld",&num);
    int temp;
    temp=num;
    while(temp>0){
        digit=temp%10;
        if(digit==0){
            digit=1;
        }
        result=result+digit*place;
        place*=10;
        temp/=10;
        }
    printf("%lld",result);
    

    return 0;
}

\\prime between 1 to 100

#include <stdio.h>
#include <stdbool.h>
int isPrime(int num){
    int flag=0;
    for(int i=2;i<num;i++){
        if(num%i==0)
        flag+=1;
    }
    if(flag==0)
    return true;
    else
    return false;
}
int main() {
    printf("Prime numbers between 1 to 100\n");
    for(int i=2;i<=100;i++){
        if(isPrime(i)){
            printf("%d ",i);
        }
    }
    

    return 0;
}

\\number of digits in a number

#include <stdio.h>
#include <stdbool.h>
int num(int n){
    int count=0,rem;
    while(n>0){
         n/=10;
        count++;
    }
     return count;
}
    
int main()
{
    int integer;
    printf("enter the number:");
    scanf("%d",&integer);
    printf("%d",num(integer));
    return 0;
    
    }

\\number to words

// Online C compiler to run C program online
#include <stdio.h>


    // Write C code here
   char *ones[]={" ","one","two","three","four","five","six","seven","eight","nine"   };
   char *tens[]={" "," ","twenty","thirty","fourty","fifty","sixty","seventy","eighty","ninety"};
   char *teens[]={"ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"};
   void convert(int n){
       if (n==0){
        printf("Zero");
        return;
       }
       if(n/1000>0){
           printf("%s thousand ",ones[n/1000]);
           n%=1000;
       }
       if(n/100>0){
           printf("%s hundred ",ones[n/100]);
           n%=100;
       }
       if(n>=10 && n<=19){
           printf("%s ",teens[n-10]);
       }
       else{
           if(n/10>0){
               printf("%s ",tens[n/10]);
           }
           if(n%10>0){ 
               printf("%s ",ones[n%10]);
           }
       }
   }
   int main() {
   int num;
   printf("enter a number:");
   scanf("%d",&num);
   convert(num);

    return 0;
}

//number of days in a month

#include <stdio.h>

void MonthDays(int n){
    if(n==1 || n==3 || n==5 || n==7 || n==8|| n==10 || n==12)
    printf("The number of days is 31");
    else if(n==2)
    printf("The number of days is 28 or 29");
    else if(n==4 || n==6|| n==9 || n==11)
    printf("The number of days is 30");
    else
    printf("invalid month");
}

int main() {
    int month;
    printf("Enter the month number:");
    scanf("%d",&month);
    MonthDays(month);
   

    return 0;
}

//counting the digits

#include <stdio.h>

int main(){
    int num,rem,digit,count=0;
    printf("Enter a  number:");
    scanf("%d",&num);
    printf("Enter the digit to count:");
    scanf("%d",&digit);
    int temp;
    temp=num;
    while(temp>0){
        rem=temp%10;
        if(rem==digit){
            count++;
        }
        temp/=10;
    }
    printf("%d has occured %d times",digit,count);
    return 0;
}

\\power of a number using recursion 

#include <stdio.h>
#include <math.h>

int power(int a,int b){
    if(b==0)
    return 1;
    return a*power(a,b-1);
}
int main() {
    // Write C code here
    int n,p;
    printf("Enter the number and the power:");
    scanf("%d %d",&n,&p);
    printf("%d",power(n,p));
 

    return 0;
}


